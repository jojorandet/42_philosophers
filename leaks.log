==1451== Helgrind, a thread error detector
==1451== Copyright (C) 2007-2024, and GNU GPL'd, by OpenWorks LLP et al.
==1451== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==1451== Command: ./philo 3 800 200 200 3
==1451== Parent PID: 1
==1451== 
==1451== ---Thread-Announcement------------------------------------------
==1451== 
==1451== Thread #3 was created
==1451==    at 0x406082B: ??? (clone.s:21)
==1451== 
==1451== ---Thread-Announcement------------------------------------------
==1451== 
==1451== Thread #2 was created
==1451==    at 0x406082B: ??? (clone.s:21)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 4 at 0x40C02B0 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059A8C: vfprintf (vfprintf.c:681)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #2
==1451== Locks held: none
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 4 at 0x40C02B0 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #2
==1451== Locks held: none
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 8 at 0x40C02D0 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059B60: vfprintf (vfprintf.c:689)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #2
==1451== Locks held: none
==1451==    at 0x40534BC: __stdio_write (__stdio_write.c:17)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c02d0 is 32 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 8 at 0x40C02D8 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x40557E4: __fwritex (fwrite.c:10)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #2
==1451== Locks held: none
==1451==    at 0x405589C: __fwritex (fwrite.c:24)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==  Address 0x40c02d8 is 40 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 8 at 0x40C02D8 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x405589C: __fwritex (fwrite.c:24)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #2
==1451== Locks held: none
==1451==    at 0x405589C: __fwritex (fwrite.c:24)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==  Address 0x40c02d8 is 40 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 2 at 0x40C1258 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x48F96E0: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4057B03: out (vfprintf.c:135)
==1451==    by 0x4057B03: pad.part.0 (vfprintf.c:146)
==1451==    by 0x405987B: pad (vfprintf.c:537)
==1451==    by 0x405987B: printf_core (vfprintf.c:637)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 2 by thread #2
==1451== Locks held: none
==1451==    at 0x48F96C8: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c1258 is 8 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 2 at 0x40C125C by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x48F96E0: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4059987: out (vfprintf.c:135)
==1451==    by 0x4059987: printf_core (vfprintf.c:641)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 2 by thread #2
==1451== Locks held: none
==1451==    at 0x48F96C8: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c125c is 12 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 1 at 0x40C125E by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x48F960C: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 1 by thread #2
==1451== Locks held: none
==1451==    at 0x48F96C8: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c125e is 14 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 2 at 0x40C1260 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x48F96C8: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 2 by thread #2
==1451== Locks held: none
==1451==    at 0x48F96E0: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c1260 is 16 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 1 at 0x40C1264 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x48F96C8: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 1 by thread #2
==1451== Locks held: none
==1451==    at 0x48F9710: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c1264 is 20 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 1 at 0x40C1268 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x48F9710: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 1 by thread #2
==1451== Locks held: none
==1451==    at 0x48F9710: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c1268 is 24 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 1 at 0x40C1269 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x48F9710: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4059987: out (vfprintf.c:135)
==1451==    by 0x4059987: printf_core (vfprintf.c:641)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 1 by thread #2
==1451== Locks held: none
==1451==    at 0x48F9710: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c1269 is 25 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 1 at 0x40C126A by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x48F96E0: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x1099B3: print_status (output.c:29)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 1 by thread #2
==1451== Locks held: none
==1451==    at 0x48F9710: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c126a is 26 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 8 at 0x40C02E8 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4053494: __stdio_write (__stdio_write.c:7)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4059987: out (vfprintf.c:135)
==1451==    by 0x4059987: printf_core (vfprintf.c:641)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x1099E3: print_status (output.c:32)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #2
==1451== Locks held: none
==1451==    at 0x40534B4: __stdio_write (__stdio_write.c:18)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c02e8 is 56 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 2 at 0x40C1258 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4053524: __stdio_write (__stdio_write.c:15)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4059987: out (vfprintf.c:135)
==1451==    by 0x4059987: printf_core (vfprintf.c:641)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x1099E3: print_status (output.c:32)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 2 by thread #2
==1451== Locks held: none
==1451==    at 0x48F96C8: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c1258 is 8 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 1 at 0x40C125E by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4053524: __stdio_write (__stdio_write.c:15)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4059987: out (vfprintf.c:135)
==1451==    by 0x4059987: printf_core (vfprintf.c:641)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x1099E3: print_status (output.c:32)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 1 by thread #2
==1451== Locks held: none
==1451==    at 0x48F96C8: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c125e is 14 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 8 at 0x40C02E8 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x40534B4: __stdio_write (__stdio_write.c:18)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4059987: out (vfprintf.c:135)
==1451==    by 0x4059987: printf_core (vfprintf.c:641)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x1099E3: print_status (output.c:32)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #2
==1451== Locks held: none
==1451==    at 0x40534B4: __stdio_write (__stdio_write.c:18)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c02e8 is 56 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 8 at 0x40C02D0 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x40534BC: __stdio_write (__stdio_write.c:17)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4059987: out (vfprintf.c:135)
==1451==    by 0x4059987: printf_core (vfprintf.c:641)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x1099E3: print_status (output.c:32)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #2
==1451== Locks held: none
==1451==    at 0x40534BC: __stdio_write (__stdio_write.c:17)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c02d0 is 32 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Possible data race during read of size 4 at 0x40C02B0 by thread #3
==1451== Locks held: none
==1451==    at 0x4059A8C: vfprintf (vfprintf.c:681)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #2
==1451== Locks held: none
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Possible data race during write of size 4 at 0x40C02B0 by thread #3
==1451== Locks held: none
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #2
==1451== Locks held: none
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Possible data race during read of size 8 at 0x40C02D0 by thread #3
==1451== Locks held: none
==1451==    at 0x4059B60: vfprintf (vfprintf.c:689)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #2
==1451== Locks held: none
==1451==    at 0x40534BC: __stdio_write (__stdio_write.c:17)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c02d0 is 32 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Possible data race during write of size 2 at 0x40C1260 by thread #3
==1451== Locks held: none
==1451==    at 0x48F96E0: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 2 by thread #2
==1451== Locks held: none
==1451==    at 0x48F96E0: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c1260 is 16 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Possible data race during write of size 1 at 0x40C126C by thread #3
==1451== Locks held: none
==1451==    at 0x48F9710: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x40598BF: out (vfprintf.c:135)
==1451==    by 0x40598BF: printf_core (vfprintf.c:638)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 1 by thread #2
==1451== Locks held: none
==1451==    at 0x48F9710: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x40598BF: out (vfprintf.c:135)
==1451==    by 0x40598BF: printf_core (vfprintf.c:638)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c126c is 28 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Possible data race during read of size 8 at 0x40C02E8 by thread #3
==1451== Locks held: none
==1451==    at 0x4053494: __stdio_write (__stdio_write.c:7)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #2
==1451== Locks held: none
==1451==    at 0x40534B4: __stdio_write (__stdio_write.c:18)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c02e8 is 56 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Possible data race during read of size 2 at 0x40C1258 by thread #3
==1451== Locks held: none
==1451==    at 0x4053524: __stdio_write (__stdio_write.c:15)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 2 by thread #2
==1451== Locks held: none
==1451==    at 0x48F96C8: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c1258 is 8 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Possible data race during read of size 1 at 0x40C125E by thread #3
==1451== Locks held: none
==1451==    at 0x4053524: __stdio_write (__stdio_write.c:15)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 1 by thread #2
==1451== Locks held: none
==1451==    at 0x48F96C8: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c125e is 14 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Possible data race during write of size 8 at 0x40C02E8 by thread #3
==1451== Locks held: none
==1451==    at 0x40534B4: __stdio_write (__stdio_write.c:18)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #2
==1451== Locks held: none
==1451==    at 0x40534B4: __stdio_write (__stdio_write.c:18)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c02e8 is 56 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Possible data race during write of size 8 at 0x40C02D0 by thread #3
==1451== Locks held: none
==1451==    at 0x40534BC: __stdio_write (__stdio_write.c:17)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #2
==1451== Locks held: none
==1451==    at 0x40534BC: __stdio_write (__stdio_write.c:17)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c02d0 is 32 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Possible data race during read of size 4 at 0x40C02B0 by thread #3
==1451== Locks held: none
==1451==    at 0x4059B84: vfprintf (vfprintf.c:691)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #2
==1451== Locks held: none
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Possible data race during write of size 4 at 0x40C02B0 by thread #3
==1451== Locks held: none
==1451==    at 0x4059B24: vfprintf (vfprintf.c:699)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #2
==1451== Locks held: none
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ---Thread-Announcement------------------------------------------
==1451== 
==1451== Thread #4 was created
==1451==    at 0x406082B: ??? (clone.s:21)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 4 at 0x40C02B0 by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059A8C: vfprintf (vfprintf.c:681)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #3
==1451== Locks held: none
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 4 at 0x40C02B0 by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #3
==1451== Locks held: none
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 8 at 0x40C02D0 by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059B60: vfprintf (vfprintf.c:689)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #3
==1451== Locks held: none
==1451==    at 0x40534BC: __stdio_write (__stdio_write.c:17)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c02d0 is 32 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 1 at 0x40C125A by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x48F9710: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4057B03: out (vfprintf.c:135)
==1451==    by 0x4057B03: pad.part.0 (vfprintf.c:146)
==1451==    by 0x405987B: pad (vfprintf.c:537)
==1451==    by 0x405987B: printf_core (vfprintf.c:637)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 2 by thread #3
==1451== Locks held: none
==1451==    at 0x48F96C8: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4058E53: out (vfprintf.c:135)
==1451==    by 0x4058E53: printf_core (vfprintf.c:461)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x108F53: grab_forks (fork_logic.c:45)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==  Address 0x40c125a is 10 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #2: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F3080: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x48F2C97: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x108FBF: grab_forks (fork_logic.c:53)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #2: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F2CEC: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x108FBF: grab_forks (fork_logic.c:53)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x4915040 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915040 is 0 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 4 at 0x40C02B0 by thread #2
==1451== Locks held: 2, at addresses 0x4915040 0x1FFF000B48
==1451==    at 0x4059A8C: vfprintf (vfprintf.c:681)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A73: log_philo_status (output.c:46)
==1451==    by 0x108FCB: grab_forks (fork_logic.c:54)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x4915040 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915040 is 0 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 4 at 0x40C02B0 by thread #2
==1451== Locks held: 2, at addresses 0x4915040 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A73: log_philo_status (output.c:46)
==1451==    by 0x108FCB: grab_forks (fork_logic.c:54)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x4915040 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915040 is 0 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 8 at 0x40C02D0 by thread #2
==1451== Locks held: 2, at addresses 0x4915040 0x1FFF000B48
==1451==    at 0x4059B60: vfprintf (vfprintf.c:689)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A73: log_philo_status (output.c:46)
==1451==    by 0x108FCB: grab_forks (fork_logic.c:54)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x40534BC: __stdio_write (__stdio_write.c:17)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4059987: out (vfprintf.c:135)
==1451==    by 0x4059987: printf_core (vfprintf.c:641)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x1099E3: print_status (output.c:32)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==  Address 0x40c02d0 is 32 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x4915040 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915040 is 0 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 1 at 0x40C1269 by thread #2
==1451== Locks held: 2, at addresses 0x4915040 0x1FFF000B48
==1451==    at 0x48F9710: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4057B03: out (vfprintf.c:135)
==1451==    by 0x4057B03: pad.part.0 (vfprintf.c:146)
==1451==    by 0x4059933: pad (vfprintf.c:141)
==1451==    by 0x4059933: printf_core (vfprintf.c:640)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A73: log_philo_status (output.c:46)
==1451==    by 0x108FCB: grab_forks (fork_logic.c:54)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451== 
==1451== This conflicts with a previous write of size 1 by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x48F9710: memcpy (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x405588F: __fwritex (fwrite.c:23)
==1451==    by 0x4059987: out (vfprintf.c:135)
==1451==    by 0x4059987: printf_core (vfprintf.c:641)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==  Address 0x40c1269 is 25 bytes inside data symbol "buf"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x4915040 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915040 is 0 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x4915068 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915068 is 40 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 4 at 0x40C02B0 by thread #2
==1451== Locks held: 3, at addresses 0x4915040 0x4915068 0x1FFF000B48
==1451==    at 0x4059A8C: vfprintf (vfprintf.c:681)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A93: log_philo_status (output.c:48)
==1451==    by 0x10900F: grab_forks (fork_logic.c:60)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x4915040 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915040 is 0 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x4915068 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915068 is 40 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 4 at 0x40C02B0 by thread #2
==1451== Locks held: 3, at addresses 0x4915040 0x4915068 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A93: log_philo_status (output.c:48)
==1451==    by 0x10900F: grab_forks (fork_logic.c:60)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x4915040 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915040 is 0 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x4915068 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915068 is 40 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 8 at 0x40C02D0 by thread #2
==1451== Locks held: 3, at addresses 0x4915040 0x4915068 0x1FFF000B48
==1451==    at 0x4059B60: vfprintf (vfprintf.c:689)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109A93: log_philo_status (output.c:48)
==1451==    by 0x10900F: grab_forks (fork_logic.c:60)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x40534BC: __stdio_write (__stdio_write.c:17)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4059987: out (vfprintf.c:135)
==1451==    by 0x4059987: printf_core (vfprintf.c:641)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x1099E3: print_status (output.c:32)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==  Address 0x40c02d0 is 32 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x4915040 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915040 is 0 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x4915068 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915068 is 40 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 4 at 0x40C02B0 by thread #2
==1451== Locks held: 3, at addresses 0x4915040 0x4915068 0x1FFF000B48
==1451==    at 0x4059A8C: vfprintf (vfprintf.c:681)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AB3: log_philo_status (output.c:50)
==1451==    by 0x109E63: eating (routine.c:43)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x4915040 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915040 is 0 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x4915068 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915068 is 40 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 4 at 0x40C02B0 by thread #2
==1451== Locks held: 3, at addresses 0x4915040 0x4915068 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AB3: log_philo_status (output.c:50)
==1451==    by 0x109E63: eating (routine.c:43)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x4915040 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915040 is 0 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x4915068 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915068 is 40 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 8 at 0x40C02D0 by thread #2
==1451== Locks held: 3, at addresses 0x4915040 0x4915068 0x1FFF000B48
==1451==    at 0x4059B60: vfprintf (vfprintf.c:689)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AB3: log_philo_status (output.c:50)
==1451==    by 0x109E63: eating (routine.c:43)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 8 by thread #4
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x40534BC: __stdio_write (__stdio_write.c:17)
==1451==    by 0x4055867: __fwritex (fwrite.c:16)
==1451==    by 0x4059987: out (vfprintf.c:135)
==1451==    by 0x4059987: printf_core (vfprintf.c:641)
==1451==    by 0x4059B7F: vfprintf (vfprintf.c:690)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x1099E3: print_status (output.c:32)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==  Address 0x40c02d0 is 32 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #3: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F3080: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x48F2C97: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x108FBF: grab_forks (fork_logic.c:53)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #3: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F2CEC: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x108FBF: grab_forks (fork_logic.c:53)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #3: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F3080: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x48F2C97: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109003: grab_forks (fork_logic.c:59)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #3: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F2CEC: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109003: grab_forks (fork_logic.c:59)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451==  Lock at 0x4915068 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915068 is 40 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x4915090 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915090 is 80 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451== Possible data race during read of size 4 at 0x40C02B0 by thread #2
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059B84: vfprintf (vfprintf.c:691)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x1099E3: print_status (output.c:32)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #3
==1451== Locks held: 3, at addresses 0x4915068 0x4915090 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AB3: log_philo_status (output.c:50)
==1451==    by 0x109E63: eating (routine.c:43)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451==  Lock at 0x4915068 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915068 is 40 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x4915090 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915090 is 80 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451== Possible data race during write of size 4 at 0x40C02B0 by thread #2
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059B24: vfprintf (vfprintf.c:699)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x1099E3: print_status (output.c:32)
==1451==    by 0x109A53: log_philo_status (output.c:44)
==1451==    by 0x109F3F: start_philo_life_cycle (routine.c:69)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #3
==1451== Locks held: 3, at addresses 0x4915068 0x4915090 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AB3: log_philo_status (output.c:50)
==1451==    by 0x109E63: eating (routine.c:43)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #2: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F3080: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x48F2C97: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109003: grab_forks (fork_logic.c:59)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #2: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F2CEC: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109003: grab_forks (fork_logic.c:59)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #4: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F3080: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x48F2C97: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x108FBF: grab_forks (fork_logic.c:53)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #4: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F2CEC: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x108FBF: grab_forks (fork_logic.c:53)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x4915040 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915040 is 0 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x4915068 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915068 is 40 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during read of size 4 at 0x40C02B0 by thread #2
==1451== Locks held: 3, at addresses 0x4915040 0x4915068 0x1FFF000B48
==1451==    at 0x4059B84: vfprintf (vfprintf.c:691)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x1099E3: print_status (output.c:32)
==1451==    by 0x109AB3: log_philo_status (output.c:50)
==1451==    by 0x109E63: eating (routine.c:43)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451==  Lock at 0x4915040 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915040 is 0 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x4915068 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x1090DB: init_main_fork_mutex (init_main_and_mutexes.c:33)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x4915068 is 40 bytes inside a block of size 120 alloc'd
==1451==    at 0x48EACC0: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109083: init_main_fork_mutex (init_main_and_mutexes.c:24)
==1451==    by 0x10911B: initialise_main_mutexes (init_main_and_mutexes.c:55)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Block was alloc'd by thread #1
==1451== 
==1451==  Lock at 0x1FFF000B48 was first observed
==1451==    at 0x48F7824: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10914F: initialise_main_mutexes (init_main_and_mutexes.c:58)
==1451==    by 0x1091AF: init_main_struct (init_main_and_mutexes.c:67)
==1451==    by 0x1098BF: main (main.c:46)
==1451==  Address 0x1fff000b48 is on thread #1's stack
==1451== 
==1451== Possible data race during write of size 4 at 0x40C02B0 by thread #2
==1451== Locks held: 3, at addresses 0x4915040 0x4915068 0x1FFF000B48
==1451==    at 0x4059B24: vfprintf (vfprintf.c:699)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x1099E3: print_status (output.c:32)
==1451==    by 0x109AB3: log_philo_status (output.c:50)
==1451==    by 0x109E63: eating (routine.c:43)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== This conflicts with a previous write of size 4 by thread #3
==1451== Locks held: 1, at address 0x1FFF000B48
==1451==    at 0x4059A94: vfprintf (vfprintf.c:682)
==1451==    by 0x4056A1F: printf (printf.c:9)
==1451==    by 0x10999F: print_status (output.c:25)
==1451==    by 0x109AD3: log_philo_status (output.c:52)
==1451==    by 0x109FB7: start_philo_life_cycle (routine.c:80)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451==  Address 0x40c02b0 is 0 bytes inside data symbol "__stdout_FILE"
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #4: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F3080: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x48F2C97: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109A0B: log_philo_status (output.c:37)
==1451==    by 0x108FCB: grab_forks (fork_logic.c:54)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #4: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F2CEC: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109A0B: log_philo_status (output.c:37)
==1451==    by 0x108FCB: grab_forks (fork_logic.c:54)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #4: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F3080: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x48F2C97: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109003: grab_forks (fork_logic.c:59)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 
==1451== ----------------------------------------------------------------
==1451== 
==1451== Thread #4: Bug in libpthread: recursive write lock granted on mutex/wrlock which does not support recursion
==1451==    at 0x48F2CEC: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x109003: grab_forks (fork_logic.c:59)
==1451==    by 0x109E47: eating (routine.c:41)
==1451==    by 0x109F5F: start_philo_life_cycle (routine.c:71)
==1451==    by 0x10A0DF: routine (routine.c:122)
==1451==    by 0x406248B: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
==1451== 

Helgrind: hg_main.c:5421 (hg_handle_client_request): Assertion 'found' failed.

host stacktrace:
==1451==    at 0x58020D70: show_sched_status_wrk (m_libcassert.c:407)
==1451==    by 0x5802103B: report_and_quit (m_libcassert.c:478)
==1451==    by 0x580211CB: vgPlain_assert_fail (m_libcassert.c:544)
==1451==    by 0x5800B6E7: hg_handle_client_request (hg_main.c:5370)
==1451==    by 0x58031A73: wrap_tool_handle_client_request (m_tooliface.c:289)
==1451==    by 0x5806C4CB: do_client_request (scheduler.c:2271)
==1451==    by 0x5806C4CB: vgPlain_scheduler (scheduler.c:1567)
==1451==    by 0x580A8157: thread_wrapper (syswrap-linux.c:102)
==1451==    by 0x580A8157: run_a_thread_NORETURN (syswrap-linux.c:155)
==1451==    by 0xFFFFFFFFFFFFFFFF: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 1451)
==1451==    at 0x48F2904: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-arm64-linux.so)
==1451==    by 0x10958B: finish_philo_routine (launch_and_stop_routine.c:39)
==1451==    by 0x109917: main (main.c:53)
client stack range: [0x1FFEFFF000 0x1FFF000FFF] client SP: 0x1FFF000950
valgrind stack range: [0x100309C000 0x100319BFFF] top usage: 13520 of 1048576

Thread 4: status = VgTs_WaitSys syscall 98 (lwpid 1454)
==1451==    at 0x40607A4: __wait (__wait.c:14)
==1451==    by 0x4062127: __tl_lock (pthread_create.c:32)
==1451==    by 0x40622A3: pthread_exit (pthread_create.c:95)
==1451==    by 0x406248F: start (pthread_create.c:207)
==1451==    by 0x406083B: ??? (clone.s:28)
client stack range: [0x4D5D000 0x4D7DFFF] client SP: 0x4D7D9F0
valgrind stack range: [0x100505A000 0x1005159FFF] top usage: 3728 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

